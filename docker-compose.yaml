version: '3.8'
services:
  social_db:
    image: postgres:14.1-alpine
    container_name: social_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - social_db:/var/lib/postgresql/data

  social_backend:
    build:
      context: backend/
      dockerfile: ./backend.Dockerfile
    container_name: social_backend
    restart: always
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - social_db
    ports:
      - "8000:8000"
    volumes:
      - type: bind
        source: ./logs/
        target: /app/logs/
      - ./:/app/:cached

  social_redis:
    image: redis:5.0-alpine
    container_name: social_redis
    volumes:
      - redisdata:/data

  social_celery:
    container_name: social_celery
    restart: unless-stopped
    build:
      context: backend/
      dockerfile: ./celery.Dockerfile
    #command: tail -F anything
    depends_on:
      - social_db
      - social_redis

  social_mail:
    image: bytemark/smtp
    restart: always

volumes:
  social_db:
    driver: local
  rabbitmq_data:
    driver: local
  rabbitmq_log:
    driver: local
  redisdata:
    driver: local
