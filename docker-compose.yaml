version: '3.8'
services:
  social_db:
    image: postgres:14.1-alpine
    container_name: social_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - social_db:/var/lib/postgresql/data

  social_backend:
    build:
      context: backend/
      dockerfile: ./backend.Dockerfile
    container_name: social_backend
    restart: always
    command: python -m uvicorn core.asgi:application --host 0.0.0.0
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_SEARCH_ENGINE_ID=${GOOGLE_SEARCH_ENGINE_ID}
    depends_on:
      - social_db
    ports:
      - "8000:8000"
    volumes:
      - type: bind
        source: ./logs/
        target: /app/logs/
      - ./:/app/:cached

  social_redis:
    image: redis:5.0-alpine
    container_name: social_redis
    volumes:
      - redisdata:/data

  social_celery:
    container_name: social_celery
    restart: unless-stopped
    build:
      context: backend/
      dockerfile: ./backend.Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_SEARCH_ENGINE_ID=${GOOGLE_SEARCH_ENGINE_ID}
    depends_on:
      - social_db
      - social_redis

  social_frontend:
    build:
      context: frontend/
      dockerfile: ./frontend.Dockerfile
    container_name: social_frontend
    restart: always
    #depends_on:
    #  - social_backend
    ports:
      - "3000:3000"
    volumes:
      - ./:/app/:cached

volumes:
  social_db:
    driver: local
  rabbitmq_data:
    driver: local
  rabbitmq_log:
    driver: local
  redisdata:
    driver: local
